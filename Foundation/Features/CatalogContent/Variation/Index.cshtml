@using Foundation.Social.ViewModels

@model Foundation.Commerce.Catalog.ViewModels.GenericVariantViewModel

@{
    var activeReviewTab = Request.QueryString["leavecomment"] != null;
}

<div class="row product-detail">
    @Html.Partial("_VariantDetail", Model)
</div>

<div class="row product-tabs">
    <div class="col-12">
        <ul class="nav nav-tabs product-tab" id="loginUsersTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link product-tab__item @(!activeReviewTab ? "active" : "")" data-toggle="tab" href="#product_tabs_description">
                    @Html.TranslateFallback("/Shared/ProductDescription", "Product Description")
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link product-tab__item @(activeReviewTab ? "active" : "")" data-toggle="tab" href="#product_tabs_reviews">
                    @Html.TranslateFallback("/Shared/Reviews", "Reviews")
                </a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane product-tab__content @(!activeReviewTab ? "fade in active show" : "fade")" id="product_tabs_description">
                @Html.PropertyFor(x => x.CurrentContent.Description)
            </div>
            <div class="tab-pane product-tab__content @(activeReviewTab ? "fade in active show" : "fade")" id="product_tabs_reviews">
                @Html.Partial("_ReviewForm", new ReviewSubmissionViewModel(Model.CurrentContent.Code))
                @*<div id="reviewsListing">
                      @Html.Partial("Reviews", Model.Reviews)
                    </div>*@
            </div>
        </div>
    </div>
</div>

@*<br />
    @if (Model.ShowRecommendations)
    {
        <section class="related-products">
            <div class="container">
                <div class="row">
                    <div class="new_title center">
                        <h2>@Html.TranslateFallback("/Shared/RelatedProducts", "Related Products")</h2>
                    </div>
                    @{ Html.RenderAction("Index", "Recommendations", new { recommendations = Model.AlternativeProducts });}
                </div>
            </div>
        </section>
    }

    <br />
    @if (Model.ShowRecommendations)
    {
        <section class="upsell-pro">
            <div class="container">
                <div class="row">
                    <div class="new_title center">
                        <h2>@Html.TranslateFallback("/Shared/RecommendationsForYou", "Recommendations for you")</h2>
                    </div>
                    @{ Html.RenderAction("Index", "Recommendations", new { recommendations = Model.CrossSellProducts });}
                </div>
            </div>
        </section>

    }*@

@section Meta {
    @{
        if (!String.IsNullOrEmpty(Model.CurrentContent.SeoInformation.Description))
        {
            <meta property="description" content="@Html.AttributeEncode(Model.CurrentContent.SeoInformation.Description)" />
        }
        else if (Model.CurrentContent.Description != null && !Model.CurrentContent.Description.IsEmpty)
        {
            <meta property="description" content="@Html.AttributeEncode(Model.CurrentContent.Description)" />
        }
        if (!String.IsNullOrEmpty(Model.CurrentContent.SeoInformation.Keywords))
        {
            <meta property="keywords" content="@Html.AttributeEncode(Model.CurrentContent.SeoInformation.Keywords)" />
        }
    }
}
